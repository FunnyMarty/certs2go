[ ca ]
# `man ca`
default_ca             = ca_default                # Configuration files may have more than one CA section for different scenarios

[ ca_default ]
# Directory and file locations. DIR_CA represents a root directory
DIR_CA                 = CERT_DIR_PATH
certs                  = ${DIR_CA}                 # Folder for generated certificates
crl_dir                = ${DIR_CA}                 # Directory containing  CRL file
new_certs_dir          = ${DIR_CA}/_backup         # Copies of signed certificates
database               = ${DIR_CA}/index.txt       # Keeps tracks of valid/revoked certs
serial                 = ${DIR_CA}/serial          # Will be populated with the next cert hex serial
# rand_serial            = yes                       # Generates a large random number to use as the serial number
# randfile               = ${DIR_CA}/_private/rand   # https://security.stackexchange.com/a/177512

# The root key and root certificate
certificate            = ${DIR_CA}/ca.crt          # The CA certificate
private_key            = ${DIR_CA}/ca.key          # The CA key

# For certificate revocation lists
crl                    = ${DIR_CA}/ca.crl          # CRL file
crlnumber              = ${DIR_CA}/crlnumber       # CRL modification counter (file)
crl_extensions         = crl_ext                   # Extensions section of CRL
default_crl_days       = 3650                      # How long to sign CRL

# SHA-1 is deprecated, so use SHA-2 instead
default_md             = sha512

unique_subject         = no                        # Set uniqueness of certificates subjects
name_opt               = ca_default                # Subject name display option in signing process
cert_opt               = ca_default                # Certificate display option in signing process
default_days           = 3650                      # How long to sign certificates for
preserve               = no
policy                 = policy_strict             # The default policy should be lenient
email_in_dn            = no                        # Add email to cert DN


[ policy_strict ]
# The root CA should only sign intermediate certificates that match. See the POLICY FORMAT section of `man ca`
# A value of 'supplied' means the field must be present in the certificate, whereas 'match' means the field must
# be populated with the same contents as the CA certificate. 'optional' dictates that the field is entirely optional
countryName            = match
stateOrProvinceName    = match
localityName           = match
organizationName       = match
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional


[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates
# See the POLICY FORMAT section of the `ca` man page
countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional


[ req ]
# Options for the 'req' tool ('man req')
default_bits           = 4096
encrypt_key            = yes
distinguished_name     = req_distinguished_name
string_mask            = utf8only                  # This sets a mask for permitted string types

# SHA-1 is deprecated, so use SHA-2 instead
default_md             = sha512

# Extension to add when the -x509 option is used
x509_extensions        = v3_root_ca


[ req_distinguished_name ]
# See https://en.wikipedia.org/wiki/Certificate_signing_request
countryName                     = Country Name (2 letter code)
countryName_default             = 
countryName_min                 = 2
countryName_max                 = 2

stateOrProvinceName             = State or Province Name (full name)
stateOrProvinceName_default     = 

localityName                    = Locality Name (e.g. city)
localityName_default            = 

0.organizationName              = Organization Name (e.g. company)
0.organizationName_default      = 

organizationalUnitName          = Organizational Unit Name (e.g. section)
organizationalUnitName_default  = 

commonName                      = Common Name (e.g. server FQDN or YOUR name)
commonName_max                  = 64

emailAddress                    = Email Address
emailAddress_default            = 
emailAddress_max                = 64


[ v3_root_ca ]
# Extensions for a typical CA (`man x509v3_config`)
# With the exception of 'CA:FALSE', there are PKIX recommendations for end-user certificates that should not
# be able to sign other certificates. 'CA:FALSE' is explicitely set because some software will malfunction without
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical, CA:true, pathlen:1
keyUsage               = critical, digitalSignature, cRLSign, keyCertSign


[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`)
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical, CA:true, pathlen:0
keyUsage               = critical, digitalSignature, cRLSign, keyCertSign


[ v3_client_crt ]
# Extensions for client certificates (`man x509v3_config`)
basicConstraints       = CA:FALSE
nsCertType             = client, email
nsComment              = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
keyUsage               = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage       = clientAuth, emailProtection
subjectAltName         = email:copy


[ v3_server_crt ]
# Extensions for server certificates (`man x509v3_config`)
basicConstraints       = CA:FALSE
nsCertType             = server
nsComment              = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage               = critical, digitalSignature, keyEncipherment
extendedKeyUsage       = serverAuth
subjectAltName         = @v3_server_alt_names

[ v3_server_alt_names ]
DNS.1                  = COMMON_NAME


[ crl_ext ]
# Extension for CRLs ('man x509v3_config')
authorityKeyIdentifier=keyid:always


[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`)
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
